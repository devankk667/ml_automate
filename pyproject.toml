[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
norecursedirs = [".git", "build", "dist", "*.egg-info", "venv", ".pytest_cache", "__pycache__"]

[tool.coverage.run]
source = ["src"]
omit = ["**/__init__.py", "**/tests/**"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.pylint]
messages_control = ["disable=all", "enable=unused-import,unused-variable,unused-argument,import-error,no-name-in-module,no-member,no-else-return,no-else-raise,no-else-continue,no-else-break,no-else-raise,no-else-return,no-else-continue,no-else-break,no-else-raise,no-else-return,no-else-continue,no-else-break"]

[tool.ruff]
# Enable pycodestyle ("E") and Pyflakes ("F") codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RUF", "RSE", "RUF", "SLF", "SLOT", "T10", "T20", "TCH", "TID", "TRY", "UP", "WPS", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when they are prefixed with an underscore.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**" = ["S101", "S101", "E402"]

# Example of platform-specific overrides
# [tool.ruff.lint]
# # On Unix, suppress the `subprocess-run-without-check` rule.
# "unix" = ["subprocess-run-without-check"]
# # On Windows, suppress the `subprocess-run-without-check` rule.
# "windows" = ["subprocess-run-without-check"]
